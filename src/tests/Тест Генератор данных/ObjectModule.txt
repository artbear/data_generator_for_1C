Перем ЮТест;
Перем ГенераторДанных;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("Тест_ДолженСоздатьПростойСправочник");
	ВсеТесты.Добавить("Тест_ДолженСоздатьГруппуСправочника");
	ВсеТесты.Добавить("Тест_ДолженСоздатьДокумент");
	ВсеТесты.Добавить("Тест_ДолженСоздатьДокументСТабличнойЧастью");
	ВсеТесты.Добавить("Тест_ДолженСоздатьТаблицуЗначений");
	ВсеТесты.Добавить("Тест_ДолженСоздатьЗаписиВНезависимомРегистреСведений");
	ВсеТесты.Добавить("Тест_ДолженСоздатьДвиженияВРегистреНакопления");
	ВсеТесты.Добавить("Тест_ДолженПроверитьПоискПеречисления");
	ВсеТесты.Добавить("Тест_ДолженПодставитьВычислитьФормулуВЯчейке");

	Возврат ВсеТесты;
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

Процедура Тест_ДолженСоздатьПростойСправочник() Экспорт
	Макет = ПолучитьМакет("ПростойСправочник");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	ЮТест.ПроверитьРавенство(ТестовыеДанные.МассивСозданныхЭлементов.Количество(), 1, "Не создалось ни одного элемента");
	Элемент = ТестовыеДанные.МассивСозданныхЭлементов[0];
	ЮТест.ПроверитьЗаполненность(Элемент.Наименование, "Не заполненно наименование созданного элемента");
	
КонецПроцедуры

Процедура Тест_ДолженСоздатьГруппуСправочника() Экспорт
	Макет = ПолучитьМакет("ГруппаСправочника");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Группа = ТестовыеДанные.МассивГрупп[0];
	ЮТест.ПроверитьЗаполненность(Группа.Наименование, "Не заполненно наименование созданного элемента");
	ЮТест.ПроверитьРавенство(Группа.ЭтоГруппа, Истина, "Не совпадает признак группы созданного объекта");
	
КонецПроцедуры

Процедура Тест_ДолженСоздатьДокумент() Экспорт
	Макет = ПолучитьМакет("ПростойДокумент");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Документ = ТестовыеДанные.МассивСозданныхДокументов[0];
	ЮТест.ПроверитьЗаполненность(Документ, "Не заполнен номер документа");
	
КонецПроцедуры

Процедура Тест_ДолженСоздатьДокументСТабличнойЧастью() Экспорт
	
	Макет = ПолучитьМакет("ДокументСТабличнойЧастью");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Документ = ТестовыеДанные.МассивДокументов[0];
	ЮТест.ПроверитьРавенство(Документ.ТабличнаяЧасть1.Количество(), 1, "Не заполнена табличная часть документа");
КонецПроцедуры

Процедура Тест_ДолженСоздатьТаблицуЗначений() Экспорт
	Макет = ПолучитьМакет("ПростаяТаблицаЗначений");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	ТаблицаИзМакета = ТестовыеДанные.СозданнаяТаблица;
	ЮТест.ПроверитьРавенство(ТаблицаИзМакета.Количество(), 1, "Не совпадает количество строк созданной таблицы");
КонецПроцедуры

Процедура Тест_ДолженСоздатьЗаписиВНезависимомРегистреСведений() Экспорт
	Макет = ПолучитьМакет("НезависимыйРегистрСведений");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	НаборЗаписей = РегистрыСведений.РегистрСведений1.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	ЮТест.ПроверитьРавенство(НаборЗаписей.Количество(), 2, "Не совпадает количество записей в регистре");
	
КонецПроцедуры

Процедура Тест_ДолженСоздатьДвиженияВРегистреНакопления() Экспорт
	
	Макет = ПолучитьМакет("РегистрНакопления");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ *
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1 КАК РегистрНакопления1");
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЮТест.ПроверитьРавенство(Выборка.Количество(), 2, "Не совпадает количество записей в регистре");
КонецПроцедуры

Процедура Тест_ДолженПроверитьПоискПеречисления() Экспорт
	Макет = ПолучитьМакет("ПоискПеречисления");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	ТаблицаИзМакета = ТестовыеДанные.ТаблицаСПереичислением;
	Перечисление = ТаблицаИзМакета[0][0];
	
	ЮТест.ПроверитьРавенство(ТипЗнч(Перечисление), Тип("ПеречислениеСсылка.Перечисление1"), "Не совпадает количество записей в регистре");
	
КонецПроцедуры

Процедура Тест_ДолженПодставитьВычислитьФормулуВЯчейке() Экспорт
	Макет = ПолучитьМакет("ФормулаВЯчейке");
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Элемент = ТестовыеДанные.ТаблицаСДанными[0][0];
	ЮТест.ПроверитьРавенство(Элемент, ПланыВидовХарактеристик.ПланВидовХарактеристик1.пвх01, "Не совпадает элемент ПВХ");
КонецПроцедуры

Процедура Тест_ДолженНайтиПредопределенныйПВХ() Экспорт
КонецПроцедуры

ГенераторДанных = ВнешниеОбработки.Создать("D:\YandexDisk\Корус\Тестирование\Инструменты\Генератор данных.epf", Ложь);

